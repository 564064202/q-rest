// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ODataSamples.Contexts;

namespace ODataSamples.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190410062415_sampleData")]
    partial class sampleData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ODataSamples.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Discount");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Discount = 1.0m,
                            FirstName = "John",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 2,
                            Discount = 2.0m,
                            FirstName = "James",
                            LastName = "Bond"
                        });
                });

            modelBuilder.Entity("ODataSamples.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId");

                    b.Property<DateTimeOffset>("OrderDate");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            OrderDate = new DateTimeOffset(new DateTime(2019, 4, 8, 9, 24, 15, 684, DateTimeKind.Unspecified).AddTicks(6317), new TimeSpan(0, 3, 0, 0, 0)),
                            Title = "Candies"
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 1,
                            OrderDate = new DateTimeOffset(new DateTime(2019, 2, 17, 9, 24, 15, 684, DateTimeKind.Unspecified).AddTicks(6355), new TimeSpan(0, 2, 0, 0, 0)),
                            Title = "Pies"
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 1,
                            OrderDate = new DateTimeOffset(new DateTime(2019, 4, 9, 9, 24, 15, 684, DateTimeKind.Unspecified).AddTicks(6362), new TimeSpan(0, 3, 0, 0, 0)),
                            Title = "Cheese cake"
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 2,
                            OrderDate = new DateTimeOffset(new DateTime(2019, 4, 3, 9, 24, 15, 684, DateTimeKind.Unspecified).AddTicks(6366), new TimeSpan(0, 3, 0, 0, 0)),
                            Title = "Ski"
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 2,
                            OrderDate = new DateTimeOffset(new DateTime(2019, 4, 10, 9, 24, 15, 684, DateTimeKind.Unspecified).AddTicks(6371), new TimeSpan(0, 3, 0, 0, 0)),
                            Title = "Helmet"
                        });
                });

            modelBuilder.Entity("ODataSamples.Entities.Order", b =>
                {
                    b.HasOne("ODataSamples.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
